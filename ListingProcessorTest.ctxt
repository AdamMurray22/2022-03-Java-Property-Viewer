#BlueJ class context
comment0.target=ListingProcessorTest
comment0.text=\r\n\ \r\n@author\ Adam\ Murray\ (K21003575)\r\n\ @author\ Augusto\ Favero\ (K21059800)\r\n\ @author\ Mathew\ Tran\ (K21074020)\r\n\ @author\ Tony\ Smith\ (K21064940)\r\n\ @version\ 1.0.0\r\n
comment1.params=
comment1.target=ListingProcessorTest()
comment1.text=\r\n\ Default\ constructor\ for\ test\ class\ ListingProcessorTest\r\n
comment10.params=
comment10.target=void\ testFilterByPriceRangeWithIllegalPriceRange()
comment10.text=\r\n\ Test\ that\ `filterByPriceRange()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ illegal\ (the\ from-price\ is\ greater\ than\ the\ to-price)\ price\ range\ arguments.\r\n
comment11.params=
comment11.target=void\ testGetNoOfPropertiesInBoroughWithMostWithValidArguments()
comment11.text=\r\n\ Test\ that\ `getNoOfPropertiesInBoroughWithMost()`\ returns\ the\ correct\ list\ when\ given\ valid\ arguments.\r\n
comment12.params=
comment12.target=void\ testGetNoOfPropertiesInBoroughWithMostWithNullListings()
comment12.text=\r\n\ Test\ that\ `getNoOfPropertiesInBoroughWithMost()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ a\ null\ listings\ argument.\r\n
comment13.params=
comment13.target=void\ testGetNoOfPropertiesInBoroughWithMostWithEmptyListings()
comment13.text=\r\n\ Test\ that\ `getNoOfPropertiesInBoroughWithMost()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ an\ empty\ listings\ argument.\r\n
comment14.params=
comment14.target=void\ testGetMaxPropertyPriceWithNullListings()
comment14.text=\r\n\ Test\ that\ `getMaxPropertyPrice()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ a\ null\ listings\ argument.\r\n
comment15.params=
comment15.target=void\ testGetMaxPropertyPriceWithEmptyListings()
comment15.text=\r\n\ Test\ that\ `getMaxPropertyPrice()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ an\ empty\ listings\ argument.\r\n
comment16.params=
comment16.target=void\ testGetMaxPropertyPriceWithValidArguments()
comment16.text=\r\n\ Test\ that\ `getMaxPropertyPrice()`\ returns\ the\ correct\ list\ when\ given\ valid\ arguments.\r\n
comment17.params=
comment17.target=void\ testGetListingWithIdWithNullListings()
comment17.text=\r\n\ Test\ that\ `getListingWithId()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ a\ null\ listings\ argument.\r\n
comment18.params=
comment18.target=void\ testGetListingWithIdWithEmptyListings()
comment18.text=\r\n\ Test\ that\ `getListingWithId()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ an\ empty\ listings\ argument.\r\n
comment19.params=
comment19.target=void\ testGetListingWithIdWithNullId()
comment19.text=\r\n\ Test\ that\ `getListingWithId()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ a\ null\ ID\ argument.\r\n
comment2.params=
comment2.target=void\ testFilterByBoroughWithValidArguments()
comment2.text=\r\n\ Test\ that\ `filterByBorough()`\ returns\ the\ correct\ list\ when\ given\ valid\ arguments.\r\n
comment20.params=
comment20.target=void\ testGetListingWithIdWithValidArguments()
comment20.text=\r\n\ Test\ that\ `getListingWithId()`\ returns\ the\ correct\ list\ when\ given\ valid\ arguments.\r\n
comment21.params=
comment21.target=void\ testGetBoroughs()
comment21.text=\r\n\ test\ that\ the\ getBoroughs()\ method\ returns\ the\ correct\ list\ of\ strings\ of\ borough\ names\ from\ the\ passed\ list\ of\ AirbnListing\ objects\r\n
comment22.params=
comment22.target=void\ testGetBoroughsNullListPassed()
comment22.text=\r\n\ test\ the\ getBorough()\ method\ if\ a\ null\ list\ is\ passed\r\n
comment23.params=
comment23.target=void\ testGetBoroughsNameNull()
comment23.text=\r\n\ tests\ the\ getBorough()\ method\ if\ an\ AirbnbListing\ object\ in\ the\ list\ is\ passed\ with\ a\ null\ borough\ name\r\n
comment24.params=
comment24.target=void\ testGetBoroughsInvalidBoroughName()
comment24.text=\r\n\ tests\ the\ getBorough()\ method\ when\ an\ AirbnbListing\ object\ in\ the\ list\ has\ an\ invalid\ borough\ name\r\n
comment25.params=
comment25.target=void\ testGetPropertiesNameInBorough()
comment25.text=\r\n\ Test\ for\ getPropertiesNameInBorough()\ method\ for\ valid,\ invalid\ and\ null\ \r\n
comment26.params=
comment26.target=void\ testGetAveragePositionValidInput()
comment26.text=\r\n\ Tests\ 'getAveragePosition()'\ returns\ the\ a\ Position\r\n\ with\ the\ average\ longitude\ and\ latitude\ when\ \r\n\ a\ valid\ input\ is\ given.\r\n
comment27.params=
comment27.target=void\ testGetAveragePositionNullInput()
comment27.text=\r\n\ Tests\ 'getAveragePosition()'\ throws\ an\ IllegalArgumentException\ when\ given\ a\ null\ input.\r\n
comment28.params=
comment28.target=void\ testGetAveragePositionEmptyListInput()
comment28.text=\r\n\ Tests\ 'getAveragePosition()'\ throws\ an\ IllegalArgumentException\ when\ given\ an\ empty\ input.\r\n
comment29.params=
comment29.target=void\ testFilterDestinationByWrongPricePassedAttraction()
comment29.text=\r\n\ Test\ that\ if\ an\ invalid\ price\ string\ is\ entered\ into\ the\ .filterDestinations\ method\ then\ and\ IllegalArgumentException\ is\ thrown\r\n
comment3.params=
comment3.target=void\ testFilterByBoroughWithNullListings()
comment3.text=\r\n\ Test\ that\ `filterByBorough()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ a\ null\ listings\ argument.\r\n
comment30.params=
comment30.target=void\ testFilterDestinationByWrongPricePassedPub()
comment30.text=\r\n\ Test\ that\ if\ an\ invalid\ price\ string\ is\ entered\ into\ the\ .filterDestinations\ method\ then\ and\ IllegalArgumentException\ is\ thrown\r\n
comment31.params=
comment31.target=void\ testFilterDestinations()
comment31.text=\r\n\ tests\ the\ filterDestinations\ to\ filter\ destinations\ based\ on\ the\ borough\ name\ and\ price\ string\ depending\ on\ the\ destination\ type\ (PUB\ or\ ATTRACTION)\r\n
comment32.params=
comment32.target=void\ testGetPropertyListingByNames()
comment32.text=\r\n\ test\ the\ getPropertyListingByName\ such\ that\ the\ correct\ AirbnbListing\ object\ is\ returned\ based\ on\ the\ list\ of\ AirbnbListing,\ borough\ name\ and\ property\ name\ passed\r\n
comment33.params=
comment33.target=void\ testGetMin()
comment33.text=\r\n\ test\ to\ get\ the\ minimum\ integer\ from\ an\ array\ of\ int\r\n
comment34.params=
comment34.target=void\ testGetMax()
comment34.text=\r\n\ test\ to\ get\ the\ maximum\ integer\ from\ an\ array\ of\ int\r\n
comment35.params=
comment35.target=void\ testRetrieveSpeciedAmount()
comment35.text=\r\n\ test\ to\ get\ a\ specific\ total\ based\ on\ an\ array\ of\ int\ ,\ and\ a\ from\ and\ to\ value\ passed\ to\ the\ retrieveSpecifiedAmount()\ method\r\n
comment36.params=
comment36.target=java.util.List\ createListings()
comment37.params=
comment37.target=void\ setUpNullLists()
comment38.params=
comment38.target=void\ setUpCustomisedListing()
comment39.params=
comment39.target=void\ setUpDestinations()
comment4.params=
comment4.target=void\ testFilterByBoroughWithEmptyListings()
comment4.text=\r\n\ Test\ that\ `filterByBorough()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ an\ empty\ listings\ argument.\r\n
comment40.params=
comment40.target=void\ testGetListingPricesValidInput()
comment40.text=\r\n\ Test\ 'getListingPrices()'\ returns\ an\ array\ of\ the\ pices\ \r\n\ when\ given\ a\ valid\ input.\r\n
comment41.params=
comment41.target=void\ testGetListingPricesEmptyInput()
comment41.text=\r\n\ Test\ 'getListingPrices()'\ returns\ an\ empty\ array\ when\ given\ an\ empty\ input.\r\n
comment42.params=
comment42.target=void\ testGetListingPricesNullInput()
comment42.text=\r\n\ Test\ 'getListingPrices()'\ throws\ an\ IllegalArgumentException\ when\ given\ a\ null\ input.\r\n
comment43.params=
comment43.target=void\ testGetListingReviewsValidInput()
comment43.text=\r\n\ Test\ 'getListingReviews()'\ returns\ an\ array\ of\ the\ number\ of\ reviews\ \r\n\ when\ given\ a\ valid\ input.\r\n
comment44.params=
comment44.target=void\ testGetListingReviewsEmptyInput()
comment44.text=\r\n\ Test\ 'getListingReviews()'\ returns\ an\ empty\ array\ when\ given\ an\ empty\ input.\r\n
comment45.params=
comment45.target=void\ testGetListingReviewsNullInput()
comment45.text=\r\n\ Test\ 'getListingReviews()'\ throws\ an\ IllegalArgumentException\ when\ given\ a\ null\ input.\r\n
comment46.params=
comment46.target=void\ testGetListingMinNightsValidInput()
comment46.text=\r\n\ Test\ 'getListingMinNights()'\ returns\ an\ array\ of\ the\ min\ nights\ \r\n\ when\ given\ a\ valid\ input.\r\n
comment47.params=
comment47.target=void\ testGetListingMinNightsEmptyInput()
comment47.text=\r\n\ Test\ 'getListingMinNights()'\ returns\ an\ empty\ array\ when\ given\ an\ empty\ input.\r\n
comment48.params=
comment48.target=void\ testGetListingMinNightsNullInput()
comment48.text=\r\n\ Test\ 'getListingMinNights()'\ throws\ an\ IllegalArgumentException\ when\ given\ a\ null\ input.\r\n
comment49.params=
comment49.target=void\ testGetOtherListingsWithHostIdValidInputButNoReturn()
comment49.text=\r\n\ Test\ 'getOtherListingsWithHostId()'\ returns\ an\ empty\ list\ when\ a\ valid\ input\ is\ given\ that\ expects\ an\ empty\ return.\r\n
comment5.params=
comment5.target=void\ testFilterByBoroughWithNullBoroughName()
comment5.text=\r\n\ Test\ that\ `filterByBorough()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ a\ null\ borough\ name\ argument.\r\n
comment50.params=
comment50.target=void\ testGetOtherListingsWithHostIdValidInputWithReturn()
comment50.text=\r\n\ Test\ 'getOtherListingsWithHostId()'\ returns\ a\ non\ empty\ list\ when\ a\ valid\ input\ is\ given\ that\ expects\ a\ list\ with\ a\ value\ in\ it.\r\n
comment51.params=
comment51.target=void\ testGetOtherListingsWithHostIdNullInput()
comment51.text=\r\n\ Test\ 'getOtherListingsWithHostId()'\ throws\ an\ illegal\ argument\ exception\ when\ the\ input\ is\ null.\r\n
comment52.params=
comment52.target=void\ testGetOtherListingsWithListingIdNullInput()
comment52.text=\r\n\ Test\ 'getOtherListingsWithHostId()'\ throws\ an\ illegal\ argument\ exception\ when\ the\ listing\ id\ is\ null.\r\n
comment53.params=
comment53.target=void\ testGetOtherListingsWithHostIdNullHostIdInput()
comment53.text=\r\n\ Test\ 'getOtherListingsWithHostId()'\ returns\ an\ empty\ list\ when\ the\ host\ id\ is\ null.\r\n
comment54.params=
comment54.target=void\ testGetNumberOfReviewsWithValidArguments()
comment54.text=\r\n\ Test\ that\ `getNumberOfReviews()`\ returns\ the\ correct\ value\ when\ given\ valid\ arguments.\r\n
comment55.params=
comment55.target=void\ testGetNumberOfReviewsWithNullListings()
comment55.text=\r\n\ Test\ that\ `getNumberOfReviews()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ a\ null\ listings\ argument.\r\n
comment56.params=
comment56.target=void\ testGetNumberOfReviewsWithEmptyListings()
comment56.text=\r\n\ Test\ that\ `getNumberOfReviews()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ an\ empty\ listings\ argument.\r\n
comment57.params=
comment57.target=void\ testGetNumberOfListingsWithValidArguments()
comment57.text=\r\n\ Test\ that\ `getNumberofListings()`\ returns\ the\ correct\ list\ size\ when\ given\ valid\ arguments.\r\n
comment58.params=
comment58.target=void\ testGetNumberOfListingsWithNullListings()
comment58.text=\r\n\ Test\ that\ `getNumberofListings()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ a\ null\ listings\ argument.\r\n
comment59.params=
comment59.target=void\ testGetNumberOfListingsWithEmptyListings()
comment59.text=\r\n\ Test\ that\ `getNumberOfListings()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ an\ empty\ listings\ argument.\r\n
comment6.params=
comment6.target=void\ testFilterByBoroughWithIllegalBoroughName()
comment6.text=\r\n\ Test\ that\ `filterByBorough()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ an\ illegal\ (not\ in\ the\ list\ of\ known\ boroughs)\ borough\ name\ argument.\r\n
comment60.params=
comment60.target=void\ testGetTotalAvailabilityWithValidArguments()
comment60.text=\r\n\ Test\ that\ `getTotalAvailableProperties()`\ returns\ the\ correct\ value\ when\ given\ valid\ arguments.\r\n
comment61.params=
comment61.target=void\ testGetTotalAvailabilityWithNullListings()
comment61.text=\r\n\ Test\ that\ `getTotalAvailableProperties()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ a\ null\ listings\ argument.\r\n
comment62.params=
comment62.target=void\ testGetTotalAvailabilityWithEmptyListings()
comment62.text=\r\n\ Test\ that\ `getTotalAvailableProperties()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ an\ empty\ listings\ argument.\r\n
comment63.params=
comment63.target=void\ testGetNonPrivateWithValidArguments()
comment63.text=\r\n\ Test\ that\ `getNonPrivate()`\ returns\ the\ correct\ value\ when\ given\ valid\ arguments.\r\n
comment64.params=
comment64.target=void\ testGetNonPrivateWithNullListings()
comment64.text=\r\n\ Test\ that\ `getNonPrivate()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ a\ null\ listings\ argument.\r\n
comment65.params=
comment65.target=void\ testGetNonPrivateWithEmptyListings()
comment65.text=\r\n\ Test\ that\ `getNonPrivate()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ an\ empty\ listings\ argument.\r\n
comment66.params=
comment66.target=void\ testGetNonPrivateWithIllegalString()
comment66.text=\r\n\ Test\ that\ `getNonPrivate()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ an\ illegal\ room\ type\ argument.\r\n
comment67.params=
comment67.target=void\ testGetNonPrivateWithNullRoomType()
comment67.text=\r\n\ Test\ that\ `getNonPrivate()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ a\ null\ room\ type\ argument.\r\n
comment7.params=
comment7.target=void\ testFilterByPriceRangeWithValidArguments()
comment7.text=\r\n\ Test\ that\ `filterByPriceRange()`\ returns\ the\ correct\ list\ when\ given\ valid\ arguments.\r\n
comment8.params=
comment8.target=void\ testFilterByPriceRangeWithNullListings()
comment8.text=\r\n\ Test\ that\ `filterByPriceRange()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ a\ null\ listings\ argument.\r\n
comment9.params=
comment9.target=void\ testFilterByPriceRangeWithEmptyListings()
comment9.text=\r\n\ Test\ that\ `filterByPriceRange()`\ throws\ an\ IllegalArgumentException\ with\ the\ right\ message\ when\ given\ an\ empty\ listings\ argument.\r\n
numComments=68
